////////////////////////////////////////////////////////////////!
//!                                                             	
//! File : Stack class
//!
//! Auther : Sharun Sashikumar
//!
//! Brief : Basic int data stack
//!
//! Date : Oct 2020
//!	
//!
////////////////////////////////////////////////////////////////!

//===============================================================
#pragma once
//===============================================================
//                        INCLUDES
//===============================================================

#include<iostream>
#include "Logger.h"

#define ENABLE_LOG_PRINT
constexpr auto EMPTY_STACK = -1;
//===============================================================
//
//===============================================================

//===============================================================
//                        TYPEDEFs
//===============================================================

typedef struct {

	uint32_t _size;
	int _top;
	uint32_t* _ptr; //assuming only positive elements
}aStack;
//===============================================================
//                          DATA
//===============================================================

//===============================================================
//
//===============================================================

//===============================================================
class AStack {

public :
	AStack();
	~AStack();

	void Push(int _data);
	uint32_t Pop(); //Considering 0 as invalid value to be stored in stack
	uint32_t Peek(uint32_t _pos);
	uint32_t StackTop();
	bool isFull();
	bool isEmpty();
private :

	aStack m_stack;
};


//===============================================================
//
//===============================================================

//===============================================================
//                        END OF FILE
//===============================================================